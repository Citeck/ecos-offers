{
  "id": "offer-request-form",
  "formKey": "offer-request-form",
  "title": {
    "en": "Offer Request Form"
  },
  "description": {},
  "customModule": "",
  "typeRef": "emodel/type@offer-request-type",
  "width": "lg",
  "system": false,
  "i18n": {
    "ru": {
      "Create": "Создать",
      "Save": "Сохранить",
      "Cancel": "Отменить",
      "generateNumber": "Сгенерировать номер"
    },
    "en": {
      "Create": "Create",
      "Save": "Save",
      "Cancel": "Cancel",
      "generateNumber": "Generate number"
    }
  },
  "definition": {
    "components": [
      {
        "scrollableContent": true,
        "key": "panel6",
        "type": "panel",
        "input": false,
        "components": [
          {
            "title": "Регистрация",
            "key": "panel5",
            "type": "panel",
            "input": false,
            "components": [
              {
                "columns": [
                  {
                    "components": [
                      {
                        "label": "idocs:registrationNumber",
                        "defaultValue": "",
                        "key": "idocs_registrationNumber",
                        "properties": {
                          "attribute": "idocs:registrationNumber"
                        },
                        "logic": [
                          {
                            "name": "disable-reg-number",
                            "trigger": {
                              "type": "javascript",
                              "javascript": "const { generateNumber = {} } = data || {};\nresult = (instance.options.formMode === 'CREATE') && generateNumber;"
                            },
                            "actions": [
                              {
                                "name": "disabled",
                                "type": "property",
                                "property": {
                                  "label": "Disabled",
                                  "value": "disabled",
                                  "type": "boolean"
                                },
                                "state": "true"
                              }
                            ]
                          },
                          {
                            "name": "mandatory-reg-number",
                            "trigger": {
                              "type": "javascript",
                              "javascript": "const { generateNumber = {} } = data || {};\nresult = (instance.options.formMode !== 'CREATE') || !generateNumber;"
                            },
                            "actions": [
                              {
                                "name": "set-mandatory-true",
                                "type": "property",
                                "property": {
                                  "label": "Required",
                                  "value": "validate.required",
                                  "type": "boolean"
                                },
                                "state": "true"
                              }
                            ]
                          }
                        ],
                        "type": "textfield",
                        "input": true
                      },
                      {
                        "label": "generateNumber",
                        "labelPosition": "right-right",
                        "persistent": "client-only",
                        "clearOnHide": false,
                        "defaultValue": true,
                        "key": "generateNumber",
                        "customConditional": "show = instance.options.formMode === 'CREATE'",
                        "type": "checkbox",
                        "input": true
                      }
                    ],
                    "type": "column",
                    "input": false,
                    "key": "column",
                    "index": 0
                  },
                  {
                    "index": 1,
                    "type": "column",
                    "input": false,
                    "key": "column",
                    "components": [
                      {
                        "label": "cm:created",
                        "format": "dd.MM.yyyy",
                        "disabled": true,
                        "enableDate": false,
                        "datePicker": {
                          "minDate": "",
                          "maxDate": ""
                        },
                        "enableTime": false,
                        "defaultDate": "moment();",
                        "defaultValue": "",
                        "key": "cm_created",
                        "properties": {
                          "attribute": "cm:created"
                        },
                        "type": "datetime",
                        "input": true,
                        "suffix": true
                      }
                    ]
                  }
                ],
                "key": "columns8",
                "type": "columns",
                "input": false
              }
            ]
          },
          {
            "title": "Основное",
            "key": "panel2",
            "type": "panel",
            "input": false,
            "components": [
              {
                "label": {
                  "ru": "Columns"
                },
                "key": "columns7",
                "columns": [
                  {
                    "components": [
                      {
                        "label": "idocs:initiator",
                        "allowedAuthorityType": "USER",
                        "currentUserByDefault": true,
                        "defaultValue": "",
                        "validate": {
                          "required": true
                        },
                        "key": "idocs_initiator",
                        "properties": {
                          "attribute": "idocs:initiator"
                        },
                        "type": "selectOrgstruct",
                        "input": true
                      },
                      {
                        "label": {
                          "ru": "requestPosition"
                        },
                        "key": "requestPosition",
                        "validate": {
                          "required": true
                        },
                        "modalTitle": "",
                        "journalId": "offer-position-journal",
                        "queryData": "",
                        "refreshOn": [],
                        "optionalWhenDisabled": false,
                        "type": "selectJournal",
                        "input": true
                      }
                    ],
                    "type": "column",
                    "input": false,
                    "key": "column",
                    "index": 0
                  },
                  {
                    "index": 1,
                    "type": "column",
                    "input": false,
                    "key": "column",
                    "components": []
                  }
                ],
                "oneColumnInViewMode": false,
                "type": "columns",
                "input": false
              },
              {
                "label": {
                  "ru": "Columns"
                },
                "key": "columns4",
                "columns": [
                  {
                    "components": [
                      {
                        "label": {
                          "ru": "requestSubdivision"
                        },
                        "key": "requestSubdivision",
                        "validate": {
                          "required": true
                        },
                        "allowedAuthorityType": "GROUP",
                        "allowedGroupType": "ROLE, BRANCH, GROUP",
                        "rootGroupName": "",
                        "isIncludedAdminGroup": true,
                        "defaultValue": "",
                        "refreshOn": [
                          "getPositionSubdivision"
                        ],
                        "clearOnRefresh": true,
                        "calculateValue": "const { getPositionSubdivision } = data || {};\nconst { subdivision } = getPositionSubdivision || {};\n\nvalue = subdivision;\n",
                        "allowCalculateOverride": true,
                        "optionalWhenDisabled": false,
                        "type": "selectOrgstruct",
                        "input": true
                      }
                    ],
                    "type": "column",
                    "input": false,
                    "key": "column",
                    "index": 0
                  },
                  {
                    "index": 1,
                    "type": "column",
                    "input": false,
                    "key": "column",
                    "components": [
                      {
                        "label": {
                          "ru": "requestManagerSubdivision"
                        },
                        "key": "requestManagerSubdivision",
                        "validate": {
                          "required": true
                        },
                        "allowedAuthorityType": "USER",
                        "defaultValue": "",
                        "refreshOn": [
                          "getManager"
                        ],
                        "clearOnRefresh": true,
                        "calculateValue": "const { getManager } = data || {};\nconst { records } = getManager || {};\n\nif (Array.isArray(records) && records !== 0) {\n  value = records[0];\n}\n",
                        "allowCalculateOverride": true,
                        "optionalWhenDisabled": false,
                        "type": "selectOrgstruct",
                        "input": true
                      }
                    ]
                  }
                ],
                "oneColumnInViewMode": false,
                "type": "columns",
                "input": false
              },
              {
                "label": {
                  "ru": "Columns"
                },
                "key": "columns5",
                "columns": [
                  {
                    "components": [
                      {
                        "label": {
                          "ru": "requestGrade"
                        },
                        "key": "requestGrade",
                        "validate": {
                          "required": true
                        },
                        "modalTitle": "",
                        "journalId": "offer-grades-journal",
                        "queryData": "",
                        "customPredicateJs": "const { requestPosition } = data || {};\n\nvalue = {\n  \"t\":\"eq\",\n  \"att\": \"gradesSimpleRoleTypeAssoc\",\n  \"val\": requestPosition\n};\n",
                        "refreshOn": [],
                        "customDefaultValue": "value = \"\";",
                        "allowCalculateOverride": true,
                        "optionalWhenDisabled": false,
                        "type": "selectJournal",
                        "input": true
                      },
                      {
                        "label": {
                          "ru": "requestCity"
                        },
                        "key": "requestCity",
                        "validate": {
                          "required": true
                        },
                        "modalTitle": "",
                        "journalId": "cities-journal",
                        "queryData": "",
                        "refreshOn": [],
                        "optionalWhenDisabled": false,
                        "type": "selectJournal",
                        "input": true
                      }
                    ],
                    "type": "column",
                    "input": false,
                    "key": "column",
                    "index": 0
                  },
                  {
                    "index": 1,
                    "type": "column",
                    "input": false,
                    "key": "column",
                    "components": [
                      {
                        "label": {
                          "ru": "requestExperience"
                        },
                        "key": "requestExperience",
                        "validate": {
                          "required": true
                        },
                        "modalTitle": "",
                        "journalId": "offer-experience-journal",
                        "queryData": "",
                        "refreshOn": [],
                        "optionalWhenDisabled": false,
                        "type": "selectJournal",
                        "input": true
                      },
                      {
                        "label": {
                          "ru": "requestTerm"
                        },
                        "key": "requestTerm",
                        "validate": {
                          "required": true
                        },
                        "format": "yyyy-MM-dd",
                        "datePicker": {
                          "minDate": "",
                          "maxDate": ""
                        },
                        "enableTime": false,
                        "defaultValue": "",
                        "refreshOn": [],
                        "optionalWhenDisabled": true,
                        "logic": [
                          {
                            "name": "setDisable",
                            "trigger": {
                              "type": "simple",
                              "simple": {
                                "show": true,
                                "when": "requestUrgentSearch",
                                "eq": "true"
                              }
                            },
                            "actions": [
                              {
                                "name": "disable",
                                "type": "property",
                                "property": {
                                  "label": "Disabled",
                                  "value": "disabled",
                                  "type": "boolean"
                                },
                                "state": "true"
                              },
                              {
                                "name": "clearValue",
                                "type": "value",
                                "value": "value = null;"
                              }
                            ]
                          }
                        ],
                        "type": "datetime",
                        "input": true,
                        "suffix": true
                      },
                      {
                        "label": {
                          "ru": "requestUrgentSearch"
                        },
                        "key": "requestUrgentSearch",
                        "refreshOn": [],
                        "optionalWhenDisabled": false,
                        "type": "checkbox",
                        "input": true
                      }
                    ]
                  }
                ],
                "oneColumnInViewMode": false,
                "type": "columns",
                "input": false
              },
              {
                "label": {
                  "ru": "Columns"
                },
                "key": "columns",
                "columns": [
                  {
                    "components": [
                      {
                        "label": {
                          "ru": "requestComment"
                        },
                        "key": "requestComment",
                        "defaultValue": "",
                        "refreshOn": [],
                        "optionalWhenDisabled": false,
                        "type": "textarea",
                        "input": true
                      }
                    ],
                    "type": "column",
                    "input": false,
                    "key": "column",
                    "index": 0,
                    "md": 12
                  }
                ],
                "oneColumnInViewMode": false,
                "type": "columns",
                "input": false
              }
            ]
          },
          {
            "label": {
              "ru": "Panel"
            },
            "key": "panel",
            "title": {
              "ru": "Кандидаты"
            },
            "refreshOn": [],
            "optionalWhenDisabled": false,
            "customConditional": "const { caseStatus } = data || {};\nconst { status } = caseStatus || {};\n\nlet statusesToShow = [\n  \"request-selection-candidates\",\n  \"request-on-work\"\n  ];\n\nshow = statusesToShow.includes(status);",
            "type": "panel",
            "input": false,
            "components": [
              {
                "label": {
                  "ru": "Columns"
                },
                "key": "columns10",
                "columns": [
                  {
                    "components": [
                      {
                        "label": {
                          "ru": "requestCandidates"
                        },
                        "key": "requestCandidates",
                        "multiple": true,
                        "modalTitle": "",
                        "journalId": "offer-candidate-journal",
                        "queryData": "",
                        "refreshOn": [],
                        "optionalWhenDisabled": false,
                        "type": "selectJournal",
                        "input": true,
                        "defaultValue": []
                      }
                    ],
                    "type": "column",
                    "input": false,
                    "key": "column",
                    "index": 0
                  },
                  {
                    "index": 1,
                    "type": "column",
                    "input": false,
                    "key": "column",
                    "components": [
                      {
                        "label": {
                          "ru": "requestSelectedCandidate"
                        },
                        "key": "requestSelectedCandidate",
                        "modalTitle": "",
                        "journalId": "offer-candidate-journal",
                        "queryData": "",
                        "refreshOn": [],
                        "optionalWhenDisabled": false,
                        "customConditional": "const { caseStatus } = data || {};\nconst { status } = caseStatus || {};\n\nlet statusesToShow = [\n  \"request-selection-candidates\",\n  \"request-on-work\"\n  ];\n\nshow = statusesToShow.includes(status);",
                        "type": "selectJournal",
                        "input": true
                      }
                    ]
                  }
                ],
                "oneColumnInViewMode": false,
                "type": "columns",
                "input": false
              }
            ]
          }
        ]
      },
      {
        "label": {
          "ru": "Columns"
        },
        "key": "columns3",
        "columns": [
          {
            "components": [
              {
                "label": "caseStatus",
                "source": {
                  "type": "record",
                  "record": {
                    "id": "{{recordId}}",
                    "attributes": {
                      "status": "_status?str"
                    }
                  },
                  "forceLoad": false
                },
                "update": {
                  "type": "once"
                },
                "key": "caseStatus",
                "type": "asyncData",
                "input": true
              }
            ],
            "md": 4,
            "type": "column",
            "input": false,
            "key": "column",
            "index": 0
          },
          {
            "md": 4,
            "type": "column",
            "input": false,
            "key": "column",
            "index": 1,
            "components": [
              {
                "label": "getPositionSubdivision",
                "source": {
                  "type": "record",
                  "record": {
                    "id": "{{ data.requestPosition }}",
                    "attributes": {
                      "subdivision": "positionSubdivision?str"
                    }
                  },
                  "forceLoad": false
                },
                "update": {
                  "type": "any-change"
                },
                "refreshOn": [
                  {
                    "label": "requestPosition",
                    "value": "requestPosition"
                  }
                ],
                "key": "getPositionSubdivision",
                "type": "asyncData",
                "input": true
              }
            ]
          },
          {
            "md": 4,
            "type": "column",
            "input": false,
            "key": "column",
            "index": 2,
            "components": [
              {
                "label": "getGroupName",
                "source": {
                  "type": "custom",
                  "custom": {
                    "syncData": "const { requestSubdivision } = data || {};\nconsole.log(\"requestSubdivision: \", requestSubdivision);\n\nvalue = requestSubdivision;\n",
                    "asyncData": "\nlet load = () => {\n  if (data.includes(\"workspace://SpacesStore/\")) {\n    return \"cm:name\";\n  }\n  return \"id\";\n};\n\nvalue = Citeck.Records.get(data).load(load());"
                  },
                  "forceLoad": false
                },
                "update": {
                  "type": "any-change"
                },
                "refreshOn": [
                  {
                    "label": "requestSubdivision",
                    "value": "requestSubdivision"
                  }
                ],
                "key": "getGroupName",
                "type": "asyncData",
                "input": true
              }
            ]
          }
        ],
        "oneColumnInViewMode": false,
        "type": "columns",
        "input": false
      },
      {
        "label": {
          "ru": "Columns"
        },
        "key": "columns2",
        "columns": [
          {
            "components": [
              {
                "label": "getHeadGroup",
                "source": {
                  "type": "custom",
                  "custom": {
                    "syncData": "const { getGroupName } = data || {};\nconsole.log(\"getGroupName: \", getGroupName);\n\nif (typeof getGroupName === \"string\" && getGroupName.trim().length === 0) {\n  console.log(\"component getHeadGroup: getGroupName is blank\");\n  value = null;\n}\n\nlet groupName = getGroupName.replace(\"GROUP_\", \"\");\n\nlet headGroup = () => {\n  switch(groupName) {\n    case \"company_chief_accountant\": \n    case \"company_accountant\":\n    case \"company_accountancy\":\n        return \"company_chief_accountant\";\n    case \"production\": \n    case \"software_dev_head\":\n    case \"production_subdivision_1\":\n    case \"production_branch_1\":\n    case \"krasnodaroffice\":\n    case \"saratovoffice\":\n    case \"tomskoffice\":\n    case \"yaroslavloffice\":\n    case \"moscowoffice\":\n        return \"software_dev_head\";\n    case \"qa\":\n    case \"qa_head\":\n    case \"qa_engineer\":\n        return \"qa_head\";\n    case \"hr\":\n    case \"hr_manager\":\n        return \"hr_manager\";\n    case \"it\":\n    case \"marketing_sales\":\n    case \"analyst\":\n    case \"CTO\":\n        return \"production_director\";\n    default:\n        console.log(\"component getHeadGroup: subdivision not includes in orgstruct\");\n        return null;\n  }\n};\n\n\nif (getGroupName.includes(\"GROUP_\")) {\n  value = \"GROUP_\" + headGroup();\n} else {\n  value = headGroup();\n}\n\n",
                    "asyncData": "let records = () => {\n  if (data === null) {\n    console.log(\"getHeadGroup: data is null\");\n    return;\n  } \n  \n  if (data.includes(\"GROUP_\")) {\n    return Citeck.Records.query({\n        sourceId: 'alfresco/',\n        query: {\n            \"t\": \"and\",\n            \"val\": [\n                {\"t\": \"eq\", \"att\": \"type\", \"val\":\"cm:authorityContainer\"},\n                {\"t\": \"eq\", \"att\": \"cm:name\", \"val\": data}\n            ]\n        },\n        language: 'predicate',\n        consistency: 'EVENTUAL'\n    });\n  }\n  \n  return Citeck.Records.query({\n      sourceId: 'emodel/authority-group',\n      query: {\n          \"t\": \"eq\", \"att\": \"id\", \"val\": \"production_director\"\n      },\n      language: 'predicate',\n      consistency: 'EVENTUAL'\n  });\n};\n\nlet recordsResult = records();\n\nif (recordsResult !== null && Array.isArray(recordsResult) && \n    recordsResult.length > 0) {\n  value = recordsResult[0];\n} else {\n  console.log(\"component getHeadGroup: records is empty\")\n}\n\n\n"
                  },
                  "forceLoad": false
                },
                "update": {
                  "type": "any-change"
                },
                "refreshOn": [
                  {
                    "label": "getGroupName",
                    "value": "getGroupName"
                  }
                ],
                "key": "getHeadGroup",
                "type": "asyncData",
                "input": true
              }
            ],
            "md": 4,
            "type": "column",
            "input": false,
            "key": "column",
            "index": 0
          },
          {
            "md": 4,
            "type": "column",
            "input": false,
            "key": "column",
            "index": 1,
            "components": [
              {
                "label": "getManager",
                "source": {
                  "type": "recordsQuery",
                  "recordsQuery": {
                    "query": "const { getHeadGroup } = data || {};\nconst { records } = getHeadGroup || {};\n\nif (Array.isArray(records) && records.length !== 0) {\n    value =  {\n      sourceId: 'emodel/person',\n      query: {\n          \"t\": \"and\",\n          \"val\": [\n              {\"t\": \"eq\", \"att\": \"authorityGroups\", \"val\": records[0]}\n          ]\n          \n     },\n      language: 'predicate',\n      consistency: 'EVENTUAL'\n   }\n  }\n  \n\n",
                    "attributes": {},
                    "isSingle": false
                  },
                  "forceLoad": false
                },
                "update": {
                  "type": "any-change"
                },
                "refreshOn": [
                  {
                    "label": "getHeadGroup",
                    "value": "getHeadGroup"
                  }
                ],
                "key": "getManager",
                "type": "asyncData",
                "input": true
              }
            ]
          },
          {
            "md": 4,
            "type": "column",
            "input": false,
            "key": "column",
            "index": 2,
            "components": []
          }
        ],
        "oneColumnInViewMode": false,
        "type": "columns",
        "input": false
      },
      {
        "columns": [
          {
            "components": [
              {
                "label": "Cancel",
                "action": "event",
                "state": "",
                "block": true,
                "key": "submit2",
                "type": "button",
                "input": true,
                "showValidations": false,
                "event": "cancel"
              }
            ],
            "md": 4,
            "type": "column",
            "input": false,
            "key": "column",
            "index": 0
          },
          {
            "md": 4,
            "type": "column",
            "input": false,
            "key": "column",
            "index": 1,
            "components": [
              {
                "label": {
                  "ru": "Save"
                },
                "key": "submit2",
                "state": "",
                "block": true,
                "refreshOn": [],
                "optionalWhenDisabled": false,
                "type": "button",
                "input": true
              }
            ]
          },
          {
            "md": 4,
            "type": "column",
            "input": false,
            "key": "column",
            "index": 2,
            "components": [
              {
                "label": "Create",
                "state": "",
                "theme": "primary",
                "block": true,
                "disableOnInvalid": true,
                "key": "submit",
                "type": "button",
                "input": true
              }
            ]
          }
        ],
        "key": "columns9",
        "type": "columns",
        "input": false
      }
    ],
    "formId": "offer-request-form"
  },
  "attributes": {}
}